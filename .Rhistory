select(idClanka, word, sukob) %>%
filter(word !=c("ae","vozaeu")) %>%
pairwise_count(word, idClanka, sort = TRUE) -> korpus_word_pairs
korpus_word_pairs
korpus_words %>%
select(idClanka, word, sukob) %>%
filter(word !=c("ae","vozaeu"))
korpus_words %>%
select(idClanka, word, sukob)
View(aa)
View(taxi)
rijeci_korelacija <- c("konkurencija", "nelegalno", "dozvola", "zakon","zarada", "profit", "sigurnost")
izbaci <- c("ae")
# korelacije
korpus_words %>%
select(idClanka, word, sukob) %>%
#  filter(word !=c("ae","vozaeu")) %>%
pairwise_count(word, idClanka, sort = TRUE) -> korpus_word_pairs
korpus_word_pairs %>%
filter(item2 %in% rijeci_korelacija) %>%
group_by(item2)
korpus_word_pairs %>%
filter(item2 %in% rijeci_korelacija) %>%
group_by(item2) %>% str()
korpus_word_pairs %>%
filter(item2 %in% rijeci_korelacija) %>% str()
korpus_word_pairs %>%
filter(item2 %in% rijeci_korelacija)
korpus_word_pairs %>%
filter(item2 %in% rijeci_korelacija) %>%
filter(item1 != "æe ")
korpus_word_pairs %>%
filter(item2 %in% rijeci_korelacija) %>%
filter(item1 != "æe")
korpus_word_pairs %>%
filter(item2 %in% rijeci_korelacija) %>%
filter(item1 != "æe")
korpus_word_pairs %>%
filter(item2 %in% rijeci_korelacija) %>%
filter(item1 == "æe")
korpus_word_pairs %>%
filter(item2 %in% rijeci_korelacija) %>%
filter(n == 28)
korpus_word_pairs %>%
filter(item2 %in% rijeci_korelacija) %>%
filter(n != 28)
korpus_word_pairs %>%
filter(item2 %in% rijeci_korelacija) %>%
filter(n != 28) %>%
filter(item1 == "vozaèa")
korpus_word_pairs %>%
filter(item2 %in% rijeci_korelacija) %>%
filter(n != 28) %>%
filter(item1 != "vozaèa")
rm(list=ls())
CroSentilex_n <- read.delim("../Podatci/crosentilex-negatives.txt",
header = FALSE,
sep = " ",
stringsAsFactors = FALSE,
fileEncoding = "UTF-8")  %>%
rename(word = "V1", sentiment = "V2" ) %>%
mutate(brija = "NEG")
CroSentilex_p  <- read.delim("../Podatci/crosentilex-positives.txt",
header = FALSE,
sep = " ",
stringsAsFactors = FALSE,
fileEncoding = "UTF-8") %>%
rename(word = "V1", sentiment = "V2" ) %>%
mutate(brija = "POZ")
Crosentilex_sve <- rbind(setDT(CroSentilex_n), setDT(CroSentilex_p))
CroSentilex_Gold  <- read.delim2("../Podatci/gs-sentiment-annotations.txt",
header = FALSE,
sep = " ",
stringsAsFactors = FALSE) %>%
rename(word = "V1", sentiment = "V2" )
Encoding(CroSentilex_Gold$word) <- "UTF-8"
CroSentilex_Gold[1,1] <- "dati"
CroSentilex_Gold$sentiment <- str_replace(CroSentilex_Gold$sentiment , "-", "1")
CroSentilex_Gold$sentiment <- str_replace(CroSentilex_Gold$sentiment , "\\+", "2")
CroSentilex_Gold$sentiment <- as.numeric(unlist(CroSentilex_Gold$sentiment))
stopwords_cro <- get_stopwords(language = "hr", source = "stopwords-iso")
my_stop_words <- tibble(
word = c(
"jedan",
"e","prvi", "dva","dvije","drugi",
"tri","treći","pet","kod",
"ove","ova",  "ovo","bez",
"evo","oko",  "om", "ek",
"mil","tko","šest", "sedam",
"osam",   "čim", "zbog",
"prema", "dok","zato", "koji",
"im", "čak","među", "tek",
"koliko", "tko","kod","poput",
"baš", "dakle", "osim", "svih",
"svoju", "odnosno", "gdje",
"kojoj", "ovi", "toga",
"ubera", "vozača", "hrvatskoj", "usluge", "godine", "više", "taksi", "taxi", "taksija", "taksija", "kaže", "rekao", "ae", "vozaeu"
),
lexicon = "lux"
)
stop_corpus <- my_stop_words %>%
bind_rows(stopwords_cro)
taxi <- read.csv2("D:/Luka/Academic/Majetic_Uber/R_project_taxi/Podatci/TaksiFinalData.csv", stringsAsFactors = FALSE)  %>%
mutate(dejt = as.Date(dejt, "%d.%m.%Y" ),
grupa_1 = toupper(grupa_1)) %>%
arrange(dejt) %>%
filter(!duplicated(idClanka))
# Napravi automatski
out <- read.csv2("D:/Luka/Academic/Majetic_Uber/R_project_taxi/Podatci/13_visak.csv", stringsAsFactors = FALSE, header = FALSE)
out %>%
mutate(id = str_extract("/\\d+", V2)) -> aa
out <- c(1244111, 1244334, 1244587, 1247674, 1255495, 1256587, 1256489, 1257518, 1260218, 1260650, 1269678, 1252506, 1252259 )
`%notin%` <- Negate(`%in%`)
taxi <- taxi %>% filter(idClanka %notin% out)
View(taxi)
sukob <- taxi %>%
filter(sukob %in% c("trad" , "kont" , "repo" , "sukob" ,  "kont2"))
uber <- taxi %>%
filter(uber == "uber")
sukob_words <- taxi %>%
filter(sukob %in% c("trad" , "kont" , "repo" , "sukob" ,  "kont2")) %>%
unnest_tokens(word, tekst) %>%
anti_join(stop_corpus, by = "word") %>%
mutate(word = gsub("\\d+", NA, word)) %>%
mutate(word = gsub("^[a-zA-Z]$", NA, word)) %>%
filter(!is.na(word))
View(sukob_words)
library(tau)
install.packages("tau")
library(tau)
Encoding(sukob_words) <- "latin1"
Encoding(sukob_words$word) <- "latin1"
sukob_words
sukob_words <- taxi %>%
filter(sukob %in% c("trad" , "kont" , "repo" , "sukob" ,  "kont2")) %>%
unnest_tokens(word, tekst) %>%
anti_join(stop_corpus, by = "word") %>%
mutate(word = gsub("\\d+", NA, word)) %>%
mutate(word = gsub("^[a-zA-Z]$", NA, word)) %>%
filter(!is.na(word))
View(sukob_words)
sukob_words
sukob_words <- taxi %>%
filter(sukob %in% c("trad" , "kont" , "repo" , "sukob" ,  "kont2")) %>%
unnest_tokens(word, tekst)
sukob_words
my_stop_words <- tibble(
word = c(
"jedan",
"e","prvi", "dva","dvije","drugi",
"tri","treći","pet","kod",
"ove","ova",  "ovo","bez",
"evo","oko",  "om", "ek",
"mil","tko","šest", "sedam",
"osam",   "čim", "zbog",
"prema", "dok","zato", "koji",
"im", "čak","među", "tek",
"koliko", "tko","kod","poput",
"baš", "dakle", "osim", "svih",
"svoju", "odnosno", "gdje",
"kojoj", "ovi", "toga",
"ubera", "vozača", "hrvatskoj", "usluge", "godine", "više", "taksi", "taxi", "taksija", "taksija", "kaže", "rekao", "ae", "vozaeu","vea", "vozaei"
),
lexicon = "lux"
)
sukob_words <- taxi %>%
filter(sukob %in% c("trad" , "kont" , "repo" , "sukob" ,  "kont2")) %>%
unnest_tokens(word, tekst) %>%
anti_join(stop_corpus, by = "word") %>%
mutate(word = gsub("\\d+", NA, word)) %>%
mutate(word = gsub("^[a-zA-Z]$", NA, word)) %>%
filter(!is.na(word))
uber_words <- taxi %>%
filter(uber == "uber") %>%
unnest_tokens(word, tekst) %>%
anti_join(stop_corpus, by = "word") %>%
mutate(word = gsub("\\d+", NA, word)) %>%
mutate(word = gsub("^[a-zA-Z]$", NA, word)) %>%
filter(!is.na(word))
korpus_words <- taxi %>%
unnest_tokens(word, tekst) %>%
anti_join(stop_corpus, by = "word") %>%
mutate(word = gsub("\\d+", NA, word)) %>%
mutate(word = gsub("^[a-zA-Z]$", NA, word)) %>%
filter(!is.na(word))
korpus_words %>%
count(word) %>%
arrange(desc(n)) %>%
mutate(ratio = (n / sum(n))*100) %>%
mutate(ratio = round(ratio,2)) %>%
mutate(ratio = paste0(ratio,"%")) %>%
filter(n > 100) %>%
arrange(desc(n))  -> corpus
corpus %>%
mutate(words = recode(word,
'prijevoza' = "transport",
'taksisti' = "taxi drivers",
"uber" = "uber",
"taksista" = "taxi drivers",
"vozila"  = "vehicles",
"zakona" = "law"  ,
"kuna"  = "kuna" ,
"prijevoz" = "transport",
"zagrebu" = "zagreb",
"prometa" = "traffic" ,
"vozači" = "drivers",
"uberu" = "uber" ,
"usluga" = "service"
)) %>%
select(words,n,ratio) %>%
rename(Word = words, N = n, Ratio = ratio) %>%
distinct(.,Word,.keep_all = T) -> corpus
kable(corpus) %>% # , caption = "Table X: Most frequent words (>100)"
kable_styling() %>%
scroll_box(width = "700px", height = "350px")
corpus
corpus %>%
filter(Word != "ae")
corpus %>%
mutate(words = recode(word,
'prijevoza' = "transport",
'taksisti' = "taxi drivers",
"uber" = "uber",
"taksista" = "taxi drivers",
"vozila"  = "vehicles",
"zakona" = "law"  ,
"kuna"  = "kuna" ,
"prijevoz" = "transport",
"zagrebu" = "zagreb",
"prometa" = "traffic" ,
"vozači" = "drivers",
"uberu" = "uber" ,
"usluga" = "service"
)) %>%
select(words,n,ratio) %>%
rename(Word = words, N = n, Ratio = ratio) %>%
distinct(.,Word,.keep_all = T) -> corpus
corpus %>%
mutate(words = recode(word,
'prijevoza' = "transport",
'taksisti' = "taxi drivers",
"uber" = "uber",
"taksista" = "taxi drivers",
"vozila"  = "vehicles",
"zakona" = "law"  ,
"kuna"  = "kuna" ,
"prijevoz" = "transport",
"zagrebu" = "zagreb",
"prometa" = "traffic" ,
"vozači" = "drivers",
"uberu" = "uber" ,
"usluga" = "service"
)) %>%
select(words,n,ratio) %>%
rename(Word = words, N = n, Ratio = ratio) %>%
distinct(.,Word,.keep_all = T) -> corpus
korpus_words %>%
count(word) %>%
arrange(desc(n)) %>%
mutate(ratio = (n / sum(n))*100) %>%
mutate(ratio = round(ratio,2)) %>%
mutate(ratio = paste0(ratio,"%")) %>%
filter(n > 100) %>%
arrange(desc(n))  -> corpus
corpus %>%
mutate(words = recode(word,
'prijevoza' = "transport",
'taksisti' = "taxi drivers",
"uber" = "uber",
"taksista" = "taxi drivers",
"vozila"  = "vehicles",
"zakona" = "law"  ,
"kuna"  = "kuna" ,
"prijevoz" = "transport",
"zagrebu" = "zagreb",
"prometa" = "traffic" ,
"vozači" = "drivers",
"uberu" = "uber" ,
"usluga" = "service"
)) %>%
select(words,n,ratio) %>%
rename(Word = words, N = n, Ratio = ratio) %>%
distinct(.,Word,.keep_all = T) -> corpus
corpus
corpus %>%
mutate(words = recode(word,
'prijevoza' = "transport",
'taksisti' = "taxi drivers",
"uber" = "uber",
"taksista" = "taxi drivers",
"vozila"  = "vehicles",
"zakona" = "law"  ,
"kuna"  = "kuna" ,
"prijevoz" = "transport",
"zagrebu" = "zagreb",
"prometa" = "traffic" ,
"vozači" = "drivers",
"uberu" = "uber" ,
"usluga" = "service"
)) %>%
select(words,n,ratio) %>%
rename(Word = words, N = n, Ratio = ratio) %>%
distinct(.,Word,.keep_all = T) %>%
slice(1,3)-> corpus
corpus %>%
mutate(words = recode(word,
'prijevoza' = "transport",
'taksisti' = "taxi drivers",
"uber" = "uber",
"taksista" = "taxi drivers",
"vozila"  = "vehicles",
"zakona" = "law"  ,
"kuna"  = "kuna" ,
"prijevoz" = "transport",
"zagrebu" = "zagreb",
"prometa" = "traffic" ,
"vozači" = "drivers",
"uberu" = "uber" ,
"usluga" = "service"
)) %>%
select(words,n,ratio) %>%
rename(Word = words, N = n, Ratio = ratio) %>%
distinct(.,Word,.keep_all = T) %>%
slice(1,3)-> corpus
korpus_words %>%
count(word) %>%
arrange(desc(n)) %>%
mutate(ratio = (n / sum(n))*100) %>%
mutate(ratio = round(ratio,2)) %>%
mutate(ratio = paste0(ratio,"%")) %>%
filter(n > 100) %>%
arrange(desc(n))  -> corpus
corpus %>%
mutate(words = recode(word,
'prijevoza' = "transport",
'taksisti' = "taxi drivers",
"uber" = "uber",
"taksista" = "taxi drivers",
"vozila"  = "vehicles",
"zakona" = "law"  ,
"kuna"  = "kuna" ,
"prijevoz" = "transport",
"zagrebu" = "zagreb",
"prometa" = "traffic" ,
"vozači" = "drivers",
"uberu" = "uber" ,
"usluga" = "service"
)) %>%
select(words,n,ratio) %>%
rename(Word = words, N = n, Ratio = ratio) %>%
distinct(.,Word,.keep_all = T) %>%
slice(1,3)-> corpus
corpus
corpus %>%
mutate(words = recode(word,
'prijevoza' = "transport",
'taksisti' = "taxi drivers",
"uber" = "uber",
"taksista" = "taxi drivers",
"vozila"  = "vehicles",
"zakona" = "law"  ,
"kuna"  = "kuna" ,
"prijevoz" = "transport",
"zagrebu" = "zagreb",
"prometa" = "traffic" ,
"vozači" = "drivers",
"uberu" = "uber" ,
"usluga" = "service"
)) %>%
select(words,n,ratio) %>%
rename(Word = words, N = n, Ratio = ratio) %>%
distinct(.,Word,.keep_all = T) %>%
slice(-1)-> corpus
korpus_words %>%
count(word) %>%
arrange(desc(n)) %>%
mutate(ratio = (n / sum(n))*100) %>%
mutate(ratio = round(ratio,2)) %>%
mutate(ratio = paste0(ratio,"%")) %>%
filter(n > 100) %>%
arrange(desc(n))  -> corpus
corpus %>%
mutate(words = recode(word,
'prijevoza' = "transport",
'taksisti' = "taxi drivers",
"uber" = "uber",
"taksista" = "taxi drivers",
"vozila"  = "vehicles",
"zakona" = "law"  ,
"kuna"  = "kuna" ,
"prijevoz" = "transport",
"zagrebu" = "zagreb",
"prometa" = "traffic" ,
"vozači" = "drivers",
"uberu" = "uber" ,
"usluga" = "service"
)) %>%
select(words,n,ratio) %>%
rename(Word = words, N = n, Ratio = ratio) %>%
distinct(.,Word,.keep_all = T) %>%
slice(-1)-> corpus
corpus
korpus_words %>%
count(word) %>%
arrange(desc(n)) %>%
mutate(ratio = (n / sum(n))*100) %>%
mutate(ratio = round(ratio,2)) %>%
mutate(ratio = paste0(ratio,"%")) %>%
filter(n > 100) %>%
arrange(desc(n))  -> corpus
# ENGLESKI
corpus %>%
vozaei""
corpus %>%
corpus %>%
mutate(words = recode(word,
'prijevoza' = "transport",
'taksisti' = "taxi drivers",
"uber" = "uber",
"taksista" = "taxi drivers",
"vozila"  = "vehicles",
"zakona" = "law"  ,
"kuna"  = "kuna" ,
"prijevoz" = "transport",
"zagrebu" = "zagreb",
"prometa" = "traffic" ,
"vozači" = "drivers",
"uberu" = "uber" ,
"usluga" = "service"
)) %>%
select(words,n,ratio) %>%
rename(Word = words, N = n, Ratio = ratio) %>%
distinct(.,Word,.keep_all = T) %>%
slice(c(-1,-3))-> corpus
corpus
corpus %>%
mutate(words = recode(word,
'prijevoza' = "transport",
'taksisti' = "taxi drivers",
"uber" = "uber",
"taksista" = "taxi drivers",
"vozila"  = "vehicles",
"zakona" = "law"  ,
"kuna"  = "kuna" ,
"prijevoz" = "transport",
"zagrebu" = "zagreb",
"prometa" = "traffic" ,
"vozači" = "drivers",
"uberu" = "uber" ,
"usluga" = "service"
)) %>%
select(words,n,ratio) %>%
rename(Word = words, N = n, Ratio = ratio) %>%
distinct(.,Word,.keep_all = T)
korpus_words %>%
count(word) %>%
arrange(desc(n)) %>%
mutate(ratio = (n / sum(n))*100) %>%
mutate(ratio = round(ratio,2)) %>%
mutate(ratio = paste0(ratio,"%")) %>%
filter(n > 100) %>%
arrange(desc(n))  -> corpus
corpus %>%
mutate(words = recode(word,
'prijevoza' = "transport",
'taksisti' = "taxi drivers",
"uber" = "uber",
"taksista" = "taxi drivers",
"vozila"  = "vehicles",
"zakona" = "law"  ,
"kuna"  = "kuna" ,
"prijevoz" = "transport",
"zagrebu" = "zagreb",
"prometa" = "traffic" ,
"vozači" = "drivers",
"uberu" = "uber" ,
"usluga" = "service"
)) %>%
select(words,n,ratio) %>%
rename(Word = words, N = n, Ratio = ratio) %>%
distinct(.,Word,.keep_all = T)
korpus_words %>%
count(word) %>%
arrange(desc(n)) %>%
mutate(ratio = (n / sum(n))*100) %>%
mutate(ratio = round(ratio,2)) %>%
mutate(ratio = paste0(ratio,"%")) %>%
filter(n > 100) %>%
arrange(desc(n))  -> corpus
corpus %>%
mutate(words = recode(word,
'prijevoza' = "transport",
'taksisti' = "taxi drivers",
"uber" = "uber",
"taksista" = "taxi drivers",
"vozila"  = "vehicles",
"zakona" = "law"  ,
"kuna"  = "kuna" ,
"prijevoz" = "transport",
"zagrebu" = "zagreb",
"prometa" = "traffic" ,
"vozači" = "drivers",
"uberu" = "uber" ,
"usluga" = "service"
)) %>%
select(words,n,ratio) %>%
rename(Word = words, N = n, Ratio = ratio) %>%
distinct(.,Word,.keep_all = T) %>%
slice(c(-1,-3,-11,-13))-> corpus
kable(corpus) %>% # , caption = "Table X: Most frequent words (>100)"
kable_styling() %>%
scroll_box(width = "700px", height = "350px")
